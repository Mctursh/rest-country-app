{"version":3,"sources":["components/ThemeContext.js","components/Country.js","components/FilterBox.js","components/Loader.js","components/CancelIcon.js","components/SearchBox.js","components/helper.js","components/Button.js","components/NotFound.js","components/Body.js","components/Metadata.js","components/CountryPage.js","components/Header.js","components/Main.js","App.js","index.js"],"names":["Theme","createContext","Country","props","theme","this","context","name","flag","region","population","capital","to","toLowerCase","className","src","alt","Component","contextType","ThemeContext","FilterBox","state","dropDown","showDropDown","bind","filter","setState","prev","handleFilter","style","display","currentRegion","onClick","Loader","cancelIcon","handleClear","SearchBox","searchText","active","handleChange","e","handleSearch","target","value","length","onChange","type","id","placeholder","ChunkCountries","arr","sizePerChunk","chunks","i","push","slice","fetchCountry","is","process","attempt","fetch","then","res","ok","json","Error","setTimeout","data","CountryNames","map","item","chunksFormed","displaying","fetched","catch","error","errorMsg","getCountry","country","chosenCountry","countryNames","alpha3Code","currCountry","Button","class","handleClick","NotFound","children","React","Body","Infinity","displayedChunk","isSearching","notFound","isFiltered","filteredChunks","filteredChunksFormed","handleLoad","retry","curr","str","queryStr","match","unit","sort","matchedCountries","concat","apply","includes","matchedSearch","console","log","processSearch","search","matchedRegions","chunkedRegions","getCountries","index","nativeName","Metadata","subregion","topLevelDomain","currencies","languages","borders","fetchNewCountry","borderFullNames","Object","keys","key","values","c","idx","borderCountry","CountryPage","fetchSelected","handleBack","params","history","goBack","Header","handleToggle","Main","useContext","useHistory","baseline","exact","path","component","App","useState","setTheme","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06429a30.chunk.js","sourcesContent":["import { createContext } from \"react\" \r\n\r\nconst Theme = createContext(\"dark\")\r\n\r\nexport default Theme;","/*eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react' //eslint-disable-line\r\nimport ThemeContext from \"./ThemeContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default class Country extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    static contextType = ThemeContext\r\n\r\n    render() {\r\n        let theme = this.context\r\n        const { name, flag, region, population, capital } = this.props\r\n        return (\r\n            <Link to={`/countries/${name.toLowerCase()}`} >\r\n                <div className={`country-info country-info-${theme}`}>\r\n                    <div className=\"img-parent\">\r\n                        <img src={flag} alt={`${name}'s flag`} />\r\n                    </div>        \r\n                    <div className={`country-metadata metadata-${theme}`}>\r\n                        <p className=\"country-name\">{name}</p>\r\n                        <p className=\"rest\">Population: <span className=\"value\">{population}</span></p>\r\n                        <p className=\"rest\">Region: <span className=\"value\">{region}</span></p>\r\n                        <p className=\"rest\">Capital: <span className=\"value\">{capital}</span></p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'  //eslint-disable-line\r\nimport ThemeContext from \"./ThemeContext\"\r\n\r\nclass FilterBox extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            dropDown: false,            \r\n        }\r\n\r\n        this.showDropDown = this.showDropDown.bind(this)\r\n        this.filter = this.filter.bind(this)\r\n    }\r\n\r\n    showDropDown () {\r\n        this.setState((prev) => {return {dropDown: !prev.dropDown}})\r\n    }\r\n\r\n    filter (region) {\r\n        this.props.handleFilter(region)\r\n        this.showDropDown()\r\n    }\r\n\r\n    static  contextType = ThemeContext\r\n    \r\n    render() {\r\n        let theme = this.context\r\n        let { dropDown } = this.state\r\n\r\n        const style = {\r\n            display: dropDown ? \"block\" : \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"filter-parent\">       \r\n                <div className={`filter filter-${theme}`}>\r\n                    <p>{`Filter by Region: ${this.props.currentRegion}`}</p>\r\n                    <i onClick={this.showDropDown} className={`fas fa-angle-${dropDown ? \"down\" : \"up\"} dd-btn`}></i>            \r\n                </div>\r\n                <div style={style} className={`region-parent region-parent-${theme}`}>\r\n                    <ul className={`country-list-${theme} region-parent-${theme}`} >\r\n                        <li onClick={() => this.filter(\"Africa\")} className={`li li-${theme}`}>Africa</li>\r\n                        <li onClick={() => this.filter(\"Americas\")} className={`li li-${theme}`}>America</li>\r\n                        <li onClick={() => this.filter(\"Asia\")} className={`li li-${theme}`}>Asia</li>\r\n                        <li onClick={() => this.filter(\"Europe\")} className={`li li-${theme}`}>Europe</li>\r\n                        <li onClick={() => this.filter(\"Oceania\")} className={`li li-${theme}`}>Oceania</li>\r\n                    </ul>\r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterBox;","import React, { Component } from 'react' //eslint-disable-line\r\nimport ThemeContext from \"./ThemeContext\"\r\n\r\nexport default class Loader extends Component {\r\n\r\n    static contextType = ThemeContext\r\n    render() {\r\n        const theme = this.context\r\n        return (\r\n            <div className=\"loader pad\">\r\n                <div className={`lds-ripple lds-ripple-${theme}`}><div></div><div></div></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react' //eslint-disable-line\r\n\r\nexport default class cancelIcon extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={() => this.props.handleClear()} className={`cancel`}>\r\n                <i className={`fas fa-times fa-times-${this.props.theme}`}></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*eslint-disable no-unused-vars*/\r\nimport React, { Component } from 'react' \r\nimport CancelIcon from './CancelIcon'\r\nimport ThemeContext from \"./ThemeContext\"\r\n\r\n class SearchBox extends Component {\r\n     constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchText: \"\",\r\n            active: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleClear = this.handleClear.bind(this)\r\n    }    \r\n    static contextType = ThemeContext;\r\n\r\n    handleChange (e) {\r\n        this.props.handleSearch(e.target.value)\r\n        this.setState(() => {\r\n           return {searchText: e.target.value}\r\n        })\r\n\r\n        e.target.value.length > 0 ? this.setState({active: true}) : this.setState({active: false})\r\n        \r\n    }\r\n\r\n    handleClear() {\r\n        this.props.handleSearch(\"\")\r\n        this.setState({searchText: \"\", active: false})\r\n    }\r\n\r\n    render() {       \r\n        let theme = this.context\r\n        const { searchText, active } = this.state\r\n        return (\r\n            <div className={`search-parent search-parent-${theme}`} >\r\n                <i className={`fas fa-search fa-search-${theme}`}></i>\r\n                <input onChange={this.handleChange} value={searchText} type=\"search\" id={`search-${theme}`} placeholder=\"Search for a country...\" />\r\n                {active && <CancelIcon theme={theme} handleClear={this.handleClear} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBox;","const ChunkCountries = (arr, sizePerChunk) => {\r\n    const chunks = []\r\n    for(let i = 0;i < arr.length;) {\r\n        chunks.push(arr.slice(i, (sizePerChunk + i)))\r\n        i += sizePerChunk\r\n    }\r\n\r\n    return chunks;\r\n}\r\n\r\nexport const SearchAlgo = (arr, queryStr) => {\r\n    let match = arr.filter(unit => unit.slice(0, queryStr.length).toLowerCase() == queryStr.toLowerCase())\r\n    return match.sort()\r\n}\r\n\r\nexport const fetchCountry = (is) => {\r\n    const process = (attempt) => {\r\n        fetch(\"https://restcountries.eu/rest/v2/all/\")\r\n            .then(res => {\r\n                //Handling errors \r\n                if (!res.ok) {             \r\n                    if( attempt < 3) {\r\n                      setTimeout(() => process(is, attempt + 1) ,1000)                      \r\n                    } else {\r\n                       throw Error()\r\n                    }\r\n                } else {\r\n                    return res.json()\r\n                }\r\n                \r\n            })\r\n            .then(data => {\r\n                const CountryNames = data.map((item) => item.name)\r\n                const chunks = ChunkCountries(data, 12)\r\n                is.setState({\r\n                    CountryNames,\r\n                    chunksFormed: chunks.length - 1,\r\n                    chunks,\r\n                    displaying: chunks[0],\r\n                    fetched: true\r\n                })\r\n            }).catch(() => is.setState({error: true, errorMsg:\"Couldn't Fetch Countries\"}))\r\n        \r\n          \r\n    }\r\n    process(0)    \r\n} \r\n\r\nexport const loadMore = (is) => {\r\n    is.setState((prev) => {\r\n        let curr = prev.displaying\r\n\r\n        //checking to see if the app is currently been filtered or not\r\n        if (is.state.fetched){\r\n            //getting the array of already displayed countries\r\n            \r\n            return {\r\n                displayedChunk: prev.displayedChunk + 1,\r\n\r\n                //adding the previous chunks to the next chunk to be displayed\r\n                displaying :[...curr, ...prev.chunks[prev.displayedChunk + 1]]\r\n            }\r\n            \r\n        } else if (is.state.isFiltered) {\r\n            return {\r\n                displayedChunk: prev.displayedChunk + 1,\r\n\r\n                //adding the previous chunks to the next chunk to be displayed\r\n                displaying :[...curr, ...prev.filteredChunks[prev.displayedChunk + 1]]\r\n            }\r\n        }\r\n        \r\n    })\r\n}\r\n\r\nexport const search = (str, is) => {\r\n    const processSearch = (countryNames) => {\r\n        //returns country names of match            \r\n        const match = SearchAlgo(countryNames, str) \r\n        if (match.length > 0){\r\n            //returns matched country objects \r\n            const matchedCountries = [].concat.apply([], is.state.chunks).filter((item) => match.includes(item.name))\r\n            is.setState({displaying: matchedCountries, matchedSearch: matchedCountries})\r\n        } else {\r\n            is.setState({notFound: true})\r\n            console.log(\"no match\");\r\n        }\r\n        \r\n    }\r\n    //checking the length of the query string to know how to process\r\n    if(str.length >= 1) {\r\n        is.setState({isSearching: true, fetched: false, isFiltered: false, notFound: false})\r\n        // this flattens the chunks into a single array\r\n        let nameArray = [].concat.apply([], is.state.chunks).map((item) => item.name)\r\n        processSearch(nameArray)    \r\n    }   else {\r\n        is.setState({fetched: true, isSearching: false, isFiltered: false, displaying: is.state.chunks[0], displayedChunk: 0, notFound: false})\r\n        is.handleFilter(\"All\")\r\n    }\r\n}\r\n\r\nexport const filter = (region, is) => {\r\n    const process = () => {\r\n        is.setState({fetched: false, isSearching: false, isFiltered: true})\r\n        const matchedRegions = [].concat.apply([], is.state.chunks).filter((item) => item.region == region)\r\n        const chunkedRegions = ChunkCountries(matchedRegions, 12)\r\n        is.setState({filteredChunks: chunkedRegions, displaying: chunkedRegions[0], displayedChunk: 0, filteredChunksFormed: chunkedRegions.length - 1, currentRegion: region})\r\n    }\r\n    region == \"All\" ? is.setState({currentRegion: \"All\"}) : process()\r\n}\r\n\r\nexport const getCountry = (is, country) => {\r\n    const process = (attempt) => {\r\n        fetch(`https://restcountries.eu/rest/v2/all`)\r\n        .then((res) => {\r\n\r\n            //Handling errors \r\n            if (!res.ok) {             \r\n                if( attempt < 3) {\r\n                    setTimeout(() => process(is, attempt + 1) ,1000)                      \r\n                } else {\r\n                    throw Error()\r\n                }\r\n            } else {\r\n                return res.json()\r\n            }\r\n        })\r\n        .then((data) => {\r\n            const chosenCountry = data.filter(item => item.name.toLowerCase() == country)\r\n            const countryNames = data.map(({name, alpha3Code}) => {\r\n                return {\r\n                    //uses the alpha3code value as the key\r\n                    [alpha3Code]: name\r\n                }    \r\n            })\r\n            is.setState({country: chosenCountry, fetched: true, countryNames: countryNames, currCountry: country})\r\n        }).catch(() => is.setState({error: true, errorMsg:\"Couldn't Fetch Country Data\"}))\r\n    }\r\n    process(0)\r\n}\r\n\r\n\r\nexport default ChunkCountries;","import React, { Component } from 'react' //eslint-disable-line\r\nimport ThemeContext from \"./ThemeContext\"\r\n\r\nexport default class Button extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    static contextType = ThemeContext\r\n\r\n    render() {\r\n        const theme = this.context\r\n        return (\r\n            <div className=\"load-more-parent\">\r\n                <button className={`load-more load-${theme} ${this.props.class}`} onClick={this.props.handleClick}>{this.props.value == \"Back\" ? <span><i className=\"fas fa-arrow-left\"></i>Back</span> : this.props.value} </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={`not-found not-found-${this.props.theme}`}>\r\n                <p>{this.props.value ? this.props.value : \"404 Page Not Found\"}</p>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*eslint-disable no-unused-vars */\r\nimport React from \"react\"\r\nimport Country from \"./Country\" \r\nimport FilterBox from \"./FilterBox\" \r\nimport Loader from \"./Loader\"\r\nimport SearchBox from \"./SearchBox\"\r\nimport { fetchCountry, loadMore, search, filter } from \"./helper\"\r\nimport Button from \"./Button\" \r\nimport NotFound from \"./NotFound\"\r\n\r\nclass Body extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            chunksFormed : Infinity,\r\n            fetched : false,\r\n            error: false,\r\n            errorMsg: \"\",\r\n            displayedChunk : 0,\r\n            displaying: [],\r\n            chunks: null,\r\n            isSearching: false,\r\n            notFound: false,\r\n            isFiltered: false,\r\n            currentRegion: \"All\",\r\n            filteredChunks: null,\r\n            filteredChunksFormed : Infinity\r\n        }\r\n        this.handleLoad = this.handleLoad.bind(this)\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n        this.handleFilter = this.handleFilter.bind(this)\r\n        this.retry = this.retry.bind(this)\r\n    }\r\n\r\n    getCountries () {\r\n        fetchCountry(this)    \r\n    }\r\n\r\n    retry() {\r\n        this.setState({error: false})\r\n        fetchCountry(this)\r\n    }\r\n\r\n    handleLoad() {\r\n        loadMore(this)\r\n    }\r\n\r\n    handleSearch (str) {\r\n        search(str, this)    \r\n    }\r\n\r\n    handleFilter (region) {\r\n        filter(region, this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCountries()\r\n    }\r\n\r\n    render() {\r\n        const { errorMsg, error, chunksFormed, displayedChunk, fetched, displaying, isSearching, isFiltered, filteredChunksFormed, currentRegion, notFound } = this.state //eslint-disable-line\r\n\r\n        return(\r\n            <div  >\r\n                    <div className=\"pad body\">\r\n                        <SearchBox handleSearch={this.handleSearch}/>\r\n                        <FilterBox handleFilter={this.handleFilter} currentRegion={currentRegion}/>\r\n                    </div>\r\n                    {error && <NotFound value={errorMsg} theme={this.props.theme} >\r\n                        <Button value=\"Try Again\" handleClick={this.retry}/>\r\n                        </NotFound>}\r\n                    <div className=\"pad country-parent \">\r\n                        {fetched || isSearching && !notFound || isFiltered  ?  displaying.map(({ flag, name, population, region, capital, nativeName }, index) => <Country key={index} nativeName={nativeName} flag={flag} name={name} population={population} region={region} capital={capital} />) : null}\r\n                    </div>\r\n                    {!fetched && !isSearching && !isFiltered && !error && <Loader />}\r\n                    {fetched && !isSearching && displayedChunk < chunksFormed && <Button value=\"Load More\" handleClick={this.handleLoad} /> }\r\n                    {isFiltered && displayedChunk < filteredChunksFormed && <Button value=\"Load More\" handleClick={this.handleLoad} />}\r\n                    {notFound && <NotFound value=\"No Country Match\" theme={this.props.theme}/>}\r\n                </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Body;","/*eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react'\r\nimport ThemeContext from \"./ThemeContext\"\r\nimport Button from \"./Button\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Metadata extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        \r\n    }\r\n\r\n    \r\n\r\n    static contextType = ThemeContext\r\n    render() {\r\n        const theme =  this.context\r\n        const { flag, name, population, region, nativeName, subregion, capital, topLevelDomain, currencies, languages, borders, countryNames,fetchNewCountry } = this.props\r\n\r\n        //Extracting the FullNames from the alpha3Codes\r\n        const borderNames = countryNames.filter(item => {\r\n            const [key] = Object.keys(item)\r\n            return  borders.includes(key)\r\n        })\r\n        // Extracting the all FullNames into a single array\r\n        const borderFullNames = borderNames.map(item => Object.values(item))\r\n        // console.log(countryNames);\r\n        \r\n        // const borderName = borders.map(item =>  )\r\n        return (\r\n            <div className=\"info-parent\">\r\n                <div className=\"info-image-parent\">\r\n                    <img src={flag} alt={`${name}'s flag`} />\r\n                </div>\r\n                <div className={`info-metadata-parent info-${theme}`}>\r\n                    <p className=\"country-name\" >{name}</p>\r\n                    <div className=\"info-metadata-child\">\r\n                        <div>\r\n                            <p className=\"rest\">Native Name: <span className=\"value\">{nativeName}</span></p>\r\n                            <p className=\"rest\">Population: <span className=\"value\">{population}</span></p>\r\n                            <p className=\"rest\">Region: <span className=\"value\">{region}</span></p>\r\n                            <p className=\"rest\">Sub Region: <span className=\"value\">{subregion}</span></p>\r\n                            <p className=\"rest\">Capital: <span className=\"value\">{capital}</span></p>\r\n                        </div>                    \r\n                        <div>\r\n                            <p className=\"rest\">Top Level Domain: <span className=\"value\">{topLevelDomain}</span></p>\r\n                            <p className=\"rest\">Currencies: {currencies.map((c, idx) => <span key={idx} className=\"value\">{idx == 0 || idx == (currencies.length - 1) ? c.name : `, ${c.name}, `}</span>)}</p>\r\n                            <p className=\"rest\">Languages: {languages.map((c, idx) => <span key={idx} className=\"value\">{idx == 0 || idx == (languages.length - 1) ? c.name : `, ${c.name}, `}</span>)}</p>\r\n                        </div>                 \r\n                    </div>\r\n                    {borders.length> 0 && <div className=\"border-countries\">\r\n                        <p className=\"rest\">Border Countries:</p>\r\n                        {borderFullNames.map(([borderCountry], idx) => <Link onClick={() => fetchNewCountry(borderCountry.toLowerCase())} key={idx} to={`/countries/${borderCountry.toLowerCase()}`}><Button class=\"border\" value={borderCountry} /></Link>)}\r\n                    </div>}            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react'\r\nimport Button from './Button'\r\nimport { getCountry } from './helper'\r\nimport Loader from './Loader'\r\nimport Metadata from './Metadata'\r\nimport NotFound from \"./NotFound\"\r\nimport ThemeContext from \"./ThemeContext\"\r\n\r\n\r\nexport default class CountryPage extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            currCountry: \"\",\r\n            fetched: false,\r\n            country: [],\r\n            error: false,\r\n            errorMsg: \"\",\r\n            countryNames: \"\"\r\n        }\r\n\r\n        this.fetchSelected = this.fetchSelected.bind(this)\r\n        this.handleBack = this.handleBack.bind(this)\r\n        this.retry = this.retry.bind(this)  \r\n    }\r\n    componentDidUpdate(){\r\n        if (this.props.match.params.country != this.state.currCountry) {\r\n            console.log(this.props.match.params.country);\r\n            this.fetchSelected(this.props.match.params.country)\r\n        };    \r\n    }\r\n    \r\n    handleBack() {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    fetchSelected (country){\r\n        this.setState({currCountry: country, fetched: false})\r\n        getCountry(this, country)\r\n    }\r\n\r\n    retry() {\r\n        this.setState({error: false})\r\n        getCountry(this, this.props.match.params.country)\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.fetchSelected(this.props.match.params.country)    \r\n    }\r\n\r\n    static contextType = ThemeContext\r\n    \r\n    render() {\r\n        const { fetched, country, error, errorMsg, countryNames } = this.state\r\n        const theme = this.context\r\n        return (\r\n\r\n            <div className=\"pad\">\r\n                <div className=\"back\">\r\n                    <Button handleClick={this.handleBack} value='Back' class=\"back-btn\" />\r\n                </div>\r\n                {error && <NotFound value={errorMsg} theme={theme} >\r\n                    <Button value=\"Try Again\" handleClick={this.retry}/>\r\n                    </NotFound>}\r\n                {fetched && country.map(({ flag, name, population, region, nativeName, subregion, capital, topLevelDomain, currencies, languages, borders }, idx) => <Metadata key={idx} fetchNewCountry={this.fetchSelected} countryNames={countryNames} flag={flag} name={name} population={population} region={region} nativeName={nativeName} subregion={subregion} capital={capital} topLevelDomain={topLevelDomain} currencies={currencies} languages={languages} borders={borders} /> ) } \r\n                {!fetched && !error && <Loader />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*eslint-disable*/\r\nimport React from \"react\"\r\nimport ThemeContext from \"./ThemeContext\"\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleToggle = this.props.handleToggle\r\n    }\r\n\r\n    static contextType = ThemeContext;\r\n\r\n    render() {\r\n        return (\r\n            <header className={`header header-${this.context} pad`} >\r\n                <h3>Where in the world?</h3>\r\n                <div onClick={() => this.handleToggle()} className=\"dark-container\">\r\n                    <i className=\"fas fa-moon\"></i>\r\n                    <h6>Dark Mode</h6>\r\n                </div>                \r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","/*eslint-disable no-unused-vars*/\r\nimport React, { useContext } from 'react'\r\nimport { BrowserRouter, Switch, Route, useHistory } from \"react-router-dom\"\r\nimport Body from './Body'\r\nimport CountryPage from './CountryPage'\r\nimport Header from './Header'\r\nimport ThemeContext from \"./ThemeContext\"\r\nimport NotFound from \"./NotFound\"\r\n\r\n// const BrowserHistory = require('react-router/lib/BrowserHistory').default;\r\n\r\nexport default function Main({ handleToggle }) {\r\n\r\n    const theme = useContext(ThemeContext)\r\n    let history = useHistory();\r\n\r\n    // @bobheadxi\r\n        // Add basename configuration for gh-pages\r\n    \r\n    return (\r\n        <BrowserRouter baseline={process.env.PUBLIC_URL} history={history}>\r\n            <div className={`App App-${theme}`}>\r\n                <Header handleToggle={handleToggle}/>\r\n                <Switch >\r\n                    <Route exact path=\"/\">\r\n                        <Body theme={theme} />\r\n                    </Route>                    \r\n                    <Route path=\"/countries/:country\" component={CountryPage} />\r\n                    <Route>\r\n                        <NotFound theme={theme} />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","/*eslint-disable no-unused-vars*/\nimport React, { useState } from \"react\";\nimport './App.css'; \nimport Main from './components/Main';\nimport ThemeContext from \"./components/ThemeContext\" \n\nfunction App() {\n  const [theme, setTheme] = useState(\"dark\")\n\n  const handleToggle = () => {\n    setTheme((prev) => prev == \"dark\" ? \"light\" : \"dark\")\n  }\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <Main handleToggle={handleToggle} />\n    </ThemeContext.Provider>  \n  );\n}\n\nexport default App;\n","/*eslint-disable no-unused-vars */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}